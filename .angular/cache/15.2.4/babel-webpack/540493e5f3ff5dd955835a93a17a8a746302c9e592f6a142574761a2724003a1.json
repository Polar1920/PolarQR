{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { BarcodeScanner } from '@capacitor-mlkit/barcode-scanning';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@angular/common\";\nfunction HomePage_ion_item_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\")(1, \"ion-label\", 4);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"ion-input\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const barcode_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(barcode_r1.format);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", barcode_r1.rawValue);\n  }\n}\nexport let HomePage = /*#__PURE__*/(() => {\n  class HomePage {\n    constructor(alertController) {\n      this.alertController = alertController;\n      this.isSupported = false;\n      this.barcodes = [];\n    }\n    ngOnInit() {\n      BarcodeScanner.isSupported().then(result => {\n        this.isSupported = result.supported;\n      });\n    }\n    scan() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const granted = yield this.requestPermissions();\n        if (!granted) {\n          this.presentAlert();\n          return;\n        }\n        const {\n          barcodes\n        } = yield BarcodeScanner.scan();\n        this.barcodes.push(...barcodes);\n      });\n    }\n    requestPermissions() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const {\n          camera\n        } = yield BarcodeScanner.requestPermissions();\n        return camera === 'granted' || camera === 'limited';\n      });\n    }\n    presentAlert() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const alert = yield this.alertController.create({\n          header: 'Permission denied',\n          message: 'Please grant camera permission to use the barcode scanner.',\n          buttons: ['OK']\n        });\n        yield alert.present();\n      });\n    }\n  }\n  HomePage.ɵfac = function HomePage_Factory(t) {\n    return new (t || HomePage)(i0.ɵɵdirectiveInject(i1.AlertController));\n  };\n  HomePage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomePage,\n    selectors: [[\"app-home\"]],\n    decls: 10,\n    vars: 2,\n    consts: [[4, \"ngFor\", \"ngForOf\"], [\"slot\", \"fixed\", \"vertical\", \"bottom\", \"horizontal\", \"end\"], [3, \"disabled\", \"click\"], [\"name\", \"scan\"], [\"position\", \"stacked\"], [\"type\", \"text\", 3, \"value\"]],\n    template: function HomePage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\");\n        i0.ɵɵtext(3, \" PolarQR Test Pro \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(4, \"ion-content\")(5, \"ion-list\");\n        i0.ɵɵtemplate(6, HomePage_ion_item_6_Template, 4, 2, \"ion-item\", 0);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"ion-fab\", 1)(8, \"ion-fab-button\", 2);\n        i0.ɵɵlistener(\"click\", function HomePage_Template_ion_fab_button_click_8_listener() {\n          return ctx.scan();\n        });\n        i0.ɵɵelement(9, \"ion-icon\", 3);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.barcodes);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.isSupported);\n      }\n    },\n    dependencies: [i2.NgForOf, i1.IonContent, i1.IonFab, i1.IonFabButton, i1.IonHeader, i1.IonIcon, i1.IonInput, i1.IonItem, i1.IonLabel, i1.IonList, i1.IonTitle, i1.IonToolbar, i1.TextValueAccessor],\n    styles: [\"#container[_ngcontent-%COMP%]{text-align:center;position:absolute;left:0;right:0;top:50%;transform:translateY(-50%)}#container[_ngcontent-%COMP%]   strong[_ngcontent-%COMP%]{font-size:20px;line-height:26px}#container[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:16px;line-height:22px;color:#8c8c8c;margin:0}#container[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{text-decoration:none}\"]\n  });\n  return HomePage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}